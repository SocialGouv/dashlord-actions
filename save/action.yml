name: "DashLord save action"
description: "Save dashlord results"

inputs:
  url:
    description: URL to save data for
    required: true
  cleanup:
    description: Cleanup previous data
    required: false
    default: "true"
#
# this actions copy scanners results to the dashlord repository for versionning
#

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        URL=${{ inputs.url }}
        CLEANUP=${{ inputs.cleanup }}
        HOSTNAME=$(echo "${{ inputs.url }}" | sed -e 's/[^/]*\/\/\([^@]*@\)\?\([^:/]*\).*/\2/')
        DASHLORD_REPO_PATH=${{ github.workspace }};
        # store results in a folder with then base64 encoded url
        URL_BASE64=$(printf "%s" "$URL" | base64 -w 500) # default is wrap at 76
        OUT_PATH="./results/${URL_BASE64}"

        echo "URL: $URL"
        echo "URL base 64: $URL_BASE64"
        echo "HOSTNAME: $HOSTNAME"
        echo "DASHLORD_REPO_PATH: $DASHLORD_REPO_PATH"
        echo "OUT_PATH: $OUT_PATH"
        echo "CLEANUP: $CLEANUP"

        cd $DASHLORD_REPO_PATH

        mkdir -p $OUT_PATH || true

        # cleanup previous scans results
        if [[ "$CLEANUP" =  "true" ]]
        then
          echo "Cleanup $OUT_PATH"
          rm -rf $OUT_PATH/*
        else
          # dont cleanup, for example when a single tool is run
          echo "Skip cleanup $OUT_PATH"
        fi

        ls -la scans

        ###### filter and jsonify nuclei logs ######
        if [[ -e "scans/nuclei.log" ]]
        then
          cat scans/nuclei.log | jq -s > scans/nuclei.json || true
          rm scans/nuclei.log || true
        fi

        ###### rename testssl.sh reports ######
        # html, json, csv
        for TESTSSL_PATH in ./scans/${HOSTNAME}_p*; do
          EXTENSION=$(echo "$TESTSSL_PATH" | sed 's/^.*\.//')
          mv $TESTSSL_PATH ./scans/testssl.${EXTENSION} || true
        done

        ###### archive results in repo folder ######
        mv scans/* $OUT_PATH/ || true

        mv report_json.json $OUT_PATH/zap.json || true
        mv report_html.html $OUT_PATH/zap.html || true

        ###### put screenshot if any ######
        mv $RUNNER_TEMP/screenshot.png $OUT_PATH/screenshot.png || true
        mv $RUNNER_TEMP/screenshot.jpeg $OUT_PATH/screenshot.jpeg || true

        ###### copy LHR reports ######

        # https://stackoverflow.com/a/29438087/174027
        shopt -s nullglob

        if [[ -e "./.lighthouseci" ]]
        then
            # concat all JSON reports
            jq -s '.' ./.lighthouseci/lhr-*.json > "${OUT_PATH}/lhr.json"
            # rename html reports with guessable url for publication
            for LHR_JSON_PATH in ./.lighthouseci/lhr-*.json; do
                LHR_URL_B64=$(jq -jr ".requestedUrl" "$LHR_JSON_PATH" | base64 -w 500)
                OUT_FILE="lhr-${LHR_URL_B64}.html"
                echo "mv ${LHR_JSON_PATH%.json}.html ${OUT_PATH}/${OUT_FILE}"
                mv "${LHR_JSON_PATH%.json}.html" "${OUT_PATH}/${OUT_FILE}"
            done
        fi

        ls -la "${OUT_PATH}"
